clear all;
%---------------------SETUP MODEL------------------------------------------
%uniform linear array of 11 sensors with isotropic power kept at 0.5 lambda

c = physconst('LightSpeed');
fc = physconst('LightSpeed');              % Operating frequency
lambda = c/fc;  %wavelength of 1 m
uniform_distance = lambda/2;

ula = phased.ULA('NumElements',11,'ElementSpacing',uniform_distance);

%---------------------signal model-----------------------------------------
ang1 = [-20; 0];          % First signal


%signal model with 10 sources at equally spaced between -60 and +60
angs = [ang1 ];
ang = [ang1(1,1) ]/180*pi;

pos = getElementPosition(ula)/lambda; 

Nsamp = 100;        % 100 samples
k = linspace(-30,20,25);
param_power_noise = 10.^(-linspace(-30, 20, 25)/10);
estmv = zeros(25,1);
estmu = zeros(25,1);
estigp = zeros(25,1);


errormv = zeros(25,1);
errormu = zeros(25,1);
errorigp = zeros(25,1);
for i=1:25
    rng(0);
    signal = sensorsig(pos,Nsamp,angs,param_power_noise(i)); %generated signal model samples
    
    mvdrspatialspect = phased.MVDREstimator('SensorArray',ula,...
            'OperatingFrequency',fc,'ScanAngles',-90:90,...
            'DOAOutputPort',true,'NumSignals',1);
    [~,ang_mvdr] = step(mvdrspatialspect, signal);
% plotSpectrum(mvdrspatialspect);
    errormv(i) = (ang_mvdr+20)^2;
    estmv(i) = ang_mvdr;
%------------------MUSIC---------------------------------------------------

    musicspatialspect = phased.MUSICEstimator('SensorArray',ula,...
            'OperatingFrequency',fc,'ScanAngles',-90:90,...
            'DOAOutputPort',true,'NumSignalsSource','Property','NumSignals',1);
    [~,ang_music] = musicspatialspect(signal);
    errormu(i) = (ang_music+20)^2;
    estmu(i) = ang_music;
%----------------------IG Pencil-------------------------------------------

% signal = transpose(signal);

%Since true covariance matrix is unavailable it is replaced by sample
%covariance matrix
    R_hat = signal'*signal;
    
    %eigen values and eigen vectors of sample covariance matrix
    [N,V] = eig(R_hat);
    
    %Linear Search for maximas from -pi/2 to pi/2
    phi = -90:1:90;
    yig = zeros(length(phi),1);
    for iter=1:length(phi)
        a_phi = zeros(11,1);
        for j = 1:11
            a_phi(j,1) = exp(-1i*2*pi*(j-1)*uniform_distance/lambda*...
                sin(phi(1,iter)/180*pi));
        end
        pencil = abs(a_phi'*inv(R_hat)*a_phi);
        yig(iter,1) = 1/pencil;
    end
    [psor,lsor] = findpeaks(yig,phi,'SortStr','descend');
    ang_ig = lsor(1);
    errorigp(i) = (ang_ig+20)^2;
    estigp(i) = ang_ig;
end
    
estmv'
estmu'
estigp'
plot(k,errormv)
hold on
plot(k,errormu)
hold on
plot(k,errorigp)
hold off

